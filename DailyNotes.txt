JAVA:
=======


language:
=========
communication with humans 



Programming Languages:
=======================
communication with machines 

	c,c++,java,python,.net

	2 types
	
	POP 							OOP			OMG
c,b,bcpl,cobol,photon...			c++,java,.net,python......
pointers
	OOPS features
				1)Performance	INHERITANCE,POLYMORPHISAM	
				2)Security		ABSTRACTION,ENCAPSULATION


		OOPS 			OOPL
	METHODOLOGY 		THE LANGUAGE WHICH SUPPORT ALL THE FEATURES OF OOPS 

					JAVA IS ONE OF THE OOPL
WHY JAVA?			1995 JDK BETA  JDK1.0...java8...JAVA 19

		1)PLATFORM INDEPENDENT     WORA(write once run anywhere)
		2)GARBAGE COLLECTION   GARBAGE COLLECTOR   C/C++


														.NET PLATFORM DEPENDENT
		MACHINE1 			MACHINE 2				MACHINE1 			MACHINE2
												
		WINDOWS				LINUX					WINDOWS 7			LINUX
		32/64					32
		I3 						I7
		
		JAVA 					JAVA	



10GB  3 GB


		JAVA 	james gosling-->53 KEYWORDS 1995 19 sun micro system -->oracle 
		
		lower case 
HELLO WORLD 

complete java installation

		https://www.javatpoint.com/javafx-how-to-install-java


1)what is compailation?

	the process of converting source code to byte code ,compailation (javac filename.java)
	
2)What is execution?	.class  java Welcome   JVM
	
	line by line executed JVM	



		JDK-->JRE-->JVM


Write a program to print add,sub,mul,div of 100,200

Identifier:
===========
any name in java will call it as identifier

	variable name,classname,method,interface,constant......


		class Test#124
		{
		
		int age@mine=123;
		
		
		
		}
		
		
		a-z,
		A-Z,
		0-9,
		_,$
		
		
Variables:
==========
		sandeeep 8989898989

		variable name 	value


		int x=90;

syntax:
========

		datatype variablename = value

Datatype:
========
	name,age,dob,weight,salary,email,contactno,aadhar no,pan......

53 

8 dt keywords

byte 	1 byte  -8 bits		-128 to 127													
short	2 bytes				-32768 to 32767					short salary=40000;
int 	4 bytes				-2147483648 to 2147483647
long	8 bytes				-2 power 63 to 2 power 63 -1				949432223232			long age=29;   --->100

float	4 bytes			float marks=87.5423423423423423423f;    5to 6 decimal 
double	8 bytes													14 to 15 decimal 	

boolean 1 bit --->true(1),false(0)
char	2 bytes						char gender='M';	

C ASCII VALUES
 UNICODE 18 international 

		24.56 LPA   76.5


Variables
	local (inside a method)   			global(inside the class and outside method)
									instance     static 


4 points 

1)syntax
		static variables declared by using static 
		if there is know static keyword i.e instance 
2)memory
		class,object(instantiation) 
	instance variables will get memory space for every create object 
	static variables will get memory space ONLY ONCE at the time of class loading into JVM 
	
3)Access
		static properties can be accessed by using CLASSNAME
		instance properties can be accessed by using OBJNAME

4)When to use 
		for COMMON DATA like countryname,schoolname,orgname... fo for static
		for UNIQUE DATA like id,aadhar,pancard,mobile....instance 
		

Eclipse :	apache	IDE
=========
INTELLJI IDEA,NETBEANS,VS CODE,MY ECLIPSE

https://www.eclipse.org/downloads/packages/release/2020-12/r

Eclipse IDE for Enterprise Java Developers

								JAVA
			JSE 					JEE 												JME	
COREJAVA,AWT,SWINGS,APPLETS..	SERVLETS,JSP,MVC,JSF,EJB,WEBSERVICES,SPING WEB....		 ANDROID
Applications


1)standalone/dekstop applications   eclipse,media player,anti virus,java

2)web applications				gmail,fb,insta,amazon,flipkart.....

3)distributed applications			BANKING APPLICATIONS

4)mobile applications



//ctrl+space--for suggestions
//ctrl+shift+f-->formatting
//ctrl+shift+/-->for adding multiline comments 
//ctrl+shift+\-->for removing multiline comments 
//ctrl+/-->for adding and removing single line comments 
//ctrl+shift+o-->for adding required imports and removing use less imports

Methods:
=======
method is block of statements for reusability


syntax:
=========

accessmodifier returntype methodname(params)  //method signature
{
return
//method body
}

Package :
==========
BY DEFAULT PACKAGE FOR EVERY JAVA FILE  java.lang
FOLDER-->PACKAGE 

PACKAGE-->COLLECTION OF CLASSES

JAR-->COLLECTION OF PACKAGES

ZIP FILES


package   

class/interface-->everyword first letter should capital
method/variable->starts with lowercase rest of the words first letter capital
package-->lowercase


Flow Control:
===============

